#=============================================================================
#
# file :        Makefile
#
# description : Makefile to generate a TANGO device server.
#
# project :     WagoInterlock
#
#=============================================================================
#                This file is generated by POGO
#        (Program Obviously used to Generate tango Object)
#=============================================================================
#
#
# MAKE_ENV is the path to find the common environment to build the project
#
MAKE_ENV ?= /usr/share/pogo/preferences

#=============================================================================
# PACKAGE_NAME is the name of the library/device/exe you want to build
#
PACKAGE_NAME = WagoInterlock
MAJOR_VERS   = 1
MINOR_VERS   = 0
RELEASE      = Release_$(MAJOR_VERS)_$(MINOR_VERS)

# #=============================================================================
# # RELEASE_TYPE
# # - DEBUG     : debug symbols - no optimization
# # - OPTIMIZED : no debug symbols - optimization level set to O2
# #-----------------------------------------------------------------------------
RELEASE_TYPE = DEBUG

#=============================================================================
# OUTPUT_TYPE can be one of the following :
#   - 'STATIC_LIB' for a static library (.a)
#   - 'SHARED_LIB' for a dynamic library (.so)
#   - 'DEVICE' for a device server (will automatically include and link
#            with Tango dependencies)
#   - 'SIMPLE_EXE' for an executable with no dependency (for exemple the test tool
#                of a library with no Tango dependencies)
#
OUTPUT_TYPE = DEVICE

#=============================================================================
# OUTPUT_DIR  is the directory which contains the build result.
# if not set, the standard location is :
#	- ./lib   if OUTPUT_TYPE is SHARED_LIB or STATIC_LIB
#	- ./bin for others
#
#OUTPUT_DIR =

#=============================================================================
# Tango Class list used by project
#
SERIAL_CLASS = Serial
SERIAL_HOME  = ../SerialLine/src

MODBUS_CLASS = Modbus
MODBUS_HOME  = ../Modbus/src

WAGO_CLASS = Wago
WAGO_HOME  = ./Wago

WAGOINTERLOCK_CLASS = WagoInterlock
WAGOINTERLOCK_HOME  = ./WagoInterlock


#=============================================================================
# INC_DIR_USER is the list of all include path needed by your sources
#   - for a device server, tango dependencies are automatically appended
#   - '-I ../include' and '-I .' are automatically appended in all cases
#
INC_DIR_USER= -I . \
              -I $(SERIAL_HOME)\
              -I $(MODBUS_HOME)\
              -I $(WAGO_HOME)\
              -I $(WAGOINTERLOCK_HOME)

#=============================================================================
# LIB_DIR_USER is the list of user library directories
#   - for a device server, tango libraries directories are automatically appended
#   - '-L ../lib' is automatically appended in all cases
#
LIB_DIR_USER=

#=============================================================================
# LFLAGS_USR is the list of user link flags
#   - for a device server, tango libraries directories are automatically appended
#   - '-ldl -lpthread' is automatically appended in all cases
#
# !!! ATTENTION !!!
# Be aware that the order matters. 
# For example if you must link with libA, and if libA depends itself on libB
# you must use '-lA -lB' in this order as link flags, otherwise you will get
# 'undefined reference' errors
#
#LFLAGS_USR+=


#=============================================================================
# CXXFLAGS_USR lists the compilation flags specific for your library/device/exe
# This is the place where to put your compile-time macros using '-Dmy_macro'
#
# -DACE_HAS_EXCEPTIONS -D__ACE_INLINE__ for ACE
#
#CXXFLAGS_USR+= -Wall


#=============================================================================
# TANGO_REQUIRED 
# - TRUE  : your project depends on TANGO
# - FALSE : your project does not depend on TANGO
#-----------------------------------------------------------------------------
# - NOTE : if PROJECT_TYPE is set to DEVICE, TANGO will be auto. added
#-----------------------------------------------------------------------------  
TANGO_REQUIRED = TRUE



#=============================================================================
#	include Standard TANGO compilation options
#
include $(MAKE_ENV)/tango.opt

#=============================================================================
#	POST_PROCESSING: action to be done after normal make.
#	e.g.:  change executable file name, .....
#POST_PROCESSING = \
#	mv bin/$(BIN_DIR)/$(PACKAGE_NAME) bin/$(BIN_DIR)/$(PACKAGE_NAME)_DS

#=============================================================================
# SVC_OBJS is the list of all objects needed to make the output
#
SVC_OBJS =  $(SVC_SERIAL_OBJS) \
            $(SVC_MODBUS_OBJS) \
            $(SVC_WAGO_OBJS) \
            $(SVC_WAGOINTERLOCK_OBJS) \
            $(OBJDIR)/MultiClassesFactory.o \
            $(OBJDIR)/main.o

#------------  Object files for Serial class  ------------
SVC_SERIAL_OBJS = \
		$(OBJDIR)/Serial.o \
		$(OBJDIR)/SerialClass.o \
		$(OBJDIR)/SerialStateMachine.o

#------------  Object files for Modbus class  ------------
SVC_MODBUS_OBJS = \
		$(OBJDIR)/Modbus.o \
		$(OBJDIR)/ModbusClass.o \
		$(OBJDIR)/ModbusStateMachine.o \
		$(OBJDIR)/ModbusCore.o \
		$(OBJDIR)/CacheThread.o

#------------  Object files for Wago class  ------------
SVC_WAGO_OBJS = \
		$(OBJDIR)/Wago.o \
		$(OBJDIR)/WagoClass.o \
		$(OBJDIR)/WagoStateMachine.o \
		$(OBJDIR)/ModbusConn.o

#------------  Object files for WagoInterlock class  ------------
SVC_WAGOINTERLOCK_OBJS = \
		$(OBJDIR)/WagoInterlock.o \
		$(OBJDIR)/WagoInterlockClass.o \
		$(OBJDIR)/WagoInterlockStateMachine.o \
		$(OBJDIR)/Attributes.o \
		$(OBJDIR)/InterlockTools.o


#=============================================================================
#	include common targets
#
include $(MAKE_ENV)/common_target.opt


#=============================================================================
# Following are dependancies of the classes used by project
#
#------------  Object files dependencies for Serial class  ------------
SERIAL_INCLUDES = \
		$(SERIAL_HOME)/Serial.h \
		$(SERIAL_HOME)/SerialClass.h

$(OBJDIR)/Serial.o:  $(SERIAL_HOME)/Serial.cpp $(SERIAL_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/Serial.o
$(OBJDIR)/SerialClass.o:  $(SERIAL_HOME)/SerialClass.cpp $(SERIAL_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/SerialClass.o
$(OBJDIR)/SerialStateMachine.o:  $(SERIAL_HOME)/SerialStateMachine.cpp $(SERIAL_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/SerialStateMachine.o

#------------  Object files dependencies for Modbus class  ------------
MODBUS_INCLUDES = \
		$(MODBUS_HOME)/Modbus.h \
		$(MODBUS_HOME)/ModbusClass.h

$(OBJDIR)/Modbus.o:  $(MODBUS_HOME)/Modbus.cpp $(MODBUS_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/Modbus.o
$(OBJDIR)/ModbusClass.o:  $(MODBUS_HOME)/ModbusClass.cpp $(MODBUS_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/ModbusClass.o
$(OBJDIR)/ModbusStateMachine.o:  $(MODBUS_HOME)/ModbusStateMachine.cpp $(MODBUS_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/ModbusStateMachine.o
$(OBJDIR)/ModbusCore.o:  $(MODBUS_HOME)/ModbusCore.cpp $(MODBUS_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/ModbusCore.o
$(OBJDIR)/CacheThread.o:  $(MODBUS_HOME)/CacheThread.cpp $(MODBUS_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/CacheThread.o

#------------  Object files dependencies for Wago class  ------------
WAGO_INCLUDES = \
		$(WAGO_HOME)/Wago.h \
		$(WAGO_HOME)/WagoClass.h

$(OBJDIR)/Wago.o:  $(WAGO_HOME)/Wago.cpp $(WAGO_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/Wago.o
$(OBJDIR)/WagoClass.o:  $(WAGO_HOME)/WagoClass.cpp $(WAGO_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/WagoClass.o
$(OBJDIR)/WagoStateMachine.o:  $(WAGO_HOME)/WagoStateMachine.cpp $(WAGO_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/WagoStateMachine.o
$(OBJDIR)/ModbusConn.o:  $(WAGO_HOME)/ModbusConn.cpp $(WAGO_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/ModbusConn.o

#------------  Object files dependencies for WagoInterlock class  ------------
WAGOINTERLOCK_INCLUDES = \
		$(WAGOINTERLOCK_HOME)/WagoInterlock.h \
		$(WAGOINTERLOCK_HOME)/WagoInterlockClass.h

$(OBJDIR)/WagoInterlock.o:  $(WAGOINTERLOCK_HOME)/WagoInterlock.cpp $(WAGOINTERLOCK_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/WagoInterlock.o
$(OBJDIR)/WagoInterlockClass.o:  $(WAGOINTERLOCK_HOME)/WagoInterlockClass.cpp $(WAGOINTERLOCK_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/WagoInterlockClass.o
$(OBJDIR)/WagoInterlockStateMachine.o:  $(WAGOINTERLOCK_HOME)/WagoInterlockStateMachine.cpp $(WAGOINTERLOCK_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/WagoInterlockStateMachine.o
$(OBJDIR)/Attributes.o:  $(WAGOINTERLOCK_HOME)/Attributes.cpp $(WAGOINTERLOCK_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/Attributes.o
$(OBJDIR)/InterlockTools.o:  $(WAGOINTERLOCK_HOME)/InterlockTools.cpp $(WAGOINTERLOCK_INCLUDES)
	$(CXX) $(CXXFLAGS) -c $< -o $(OBJDIR)/InterlockTools.o


