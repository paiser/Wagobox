//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wago Modbus Tango Server
//  @ File Name : WagoDevice.h
//  @ Date : 2013-02-03
//  @ Author : Pawel Kowaliszyn
//
//


#if !defined(_WAGODEVICE_H)
#define _WAGODEVICE_H

#include "ModbusAbstract.h"
#include "BufferHolder.h"
#include "Module.h"
#include "LogicalDevice.h"

#include <string>


class LogicalDevice;
class Visitor;

/*! Clas representing whole Wago coupler/controller with attached I/O modules
 *
 */
class WagoDevice
{
public:

	WagoDevice();
	virtual ~WagoDevice();
	void ReadPhysNoCache(unsigned short LDeviceKey, vector<float> &values);
	void WritePhys(unsigned short LDeviceKey, vector<float> &values);
	void ReadPhys(unsigned short LDeviceKey, vector<float> &values);
	void Read(unsigned short LDeviceKey, vector<unsigned short> &values);
	void Write(unsigned short LDeviceKey, vector<unsigned short> &values);
	void ReadDigi(unsigned short LDeviceKey, vector<unsigned short> &values);
	void ReadDigiNoCache(unsigned short LDeviceKey, vector<unsigned short> &values);
	void WriteDigi(unsigned short LDeviceKey, vector<unsigned short> &values);
	void ReadKeys(vector<unsigned short> &values);
	void Key2Name(unsigned short LDeviceKey,string &name);
	void Name2Key(string &name, unsigned short &key);
	void Log2Hard(unsigned short LDeviceKey, unsigned short LChannel, vector<unsigned short> &values);
	void Hard2LOG(unsigned short offset, unsigned short io, vector<unsigned short>& valueHolder);
	void WcComm(vector<unsigned short>& inputArguments, vector<unsigned short>& outputArguments);
	void Status(string &output);

	Module* GetModule(unsigned int number);
	LogicalDevice* GetLd(unsigned int number);
	int GetModuleIndex(Module* mod);
	bool ValidateConfiguration(configInfo& cfg);

	BufferHolder buffers; //!Object responsible for buffer access.
protected:
	void ConductService(Visitor* service);
	vector<LogicalDevice*> logicalDevices; //! List of logical devices.
	vector<Module*> modules; //! List of modules.

	friend class Configurator;

	LOGGING_ADDONS;
};

#endif  //_WAGODEVICE_H
