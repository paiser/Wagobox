//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wago Modbus Tango Server
//  @ File Name : LogicalDevice.h
//  @ Date : 2013-02-03
//  @ Author : Pawel Kowaliszyn
//
//


#if !defined(_LOGICALDEVICE_H)
#define _LOGICALDEVICE_H

#include <vector>
#include <string>


#include "WagoDevice.h"

class Module;

/*!Structure for description of link between logical device
 * and Value modbus value in the module.
 */
typedef struct _logDeviceValueMapping
{
	Module* module;
	unsigned int channel;
	_logDeviceValueMapping(Module* mod, unsigned int chan):module(mod),channel(chan){};
}logDeviceValueMapping;

/*!Class representing logical device entity. Logical Device is abstract element
 * representing set of physical measurements of the system. logical device is composed of
 * logical channels. Each channel represts one physical variable of the system.
 */
class LogicalDevice
{
public:
	void ReadPhys(vector<float>& values);
	void WritePhys(vector<float>& values);
	void ReadDigi(vector<unsigned short>& values);
	void WriteDigi(vector<unsigned short>& values);
	string GetName(){ return name; };
	logDeviceValueMapping* GetChannel(unsigned int chan);
	unsigned short GetNumOfChannels(){return logicalChannels.size();};

private:
	string name; //! name of the logical Device
	vector<logDeviceValueMapping> logicalChannels; //! Mapping of logical device elements into Modbus process image values.

friend class Configurator;

LOGGING_ADDONS;
};

#endif  //_LOGICALDEVICE_H
