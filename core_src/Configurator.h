//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Wago Modbus Tango Server
//  @ File Name : Configurator.h
//  @ Date : 21/03/2013
//  @ Author : Pawel Kowaliszyn
//
//


#if !defined(_CONFIGURATOR_H)
#define _CONFIGURATOR_H

#include "WagoDevice.h"

/*!Class for setting up the device objects tree. This class parses the configuration string
 * and does the related configuration steps. Object of this class should be created
 * at the initiation stage of server run. After setting up the device objects tree it is
 * not needed any more and should be deleted.
 */
class Configurator
{
public:
	Configurator(WagoDevice *wdev);
	void ParseConfiguration(vector<string> &resources );
	void SetModbusDevice(ModbusAbstract *mbDev, unsigned short updatePeriod);
protected:
	int ParseConfigLine(vector<string> &lineVals);
	void SetupBuffers();
	Module* CreateRegisterModule(wagoModuleDesc* dsc);
	Module* CreateBinaryModule(wagoModuleDesc* dsc);
	LogicalDevice* CreateLogicalDevice(string name);
private:
	WagoDevice* wd;  //! Pointer to root wago device object which structure is being set up.

	unsigned int currentAnaInOffset; //! Offset to next analog input register after pool of already created
	unsigned int currentAnaOutOffset; //! Offset to next analog output register after pool of already created
	unsigned int currentBinaryInOffset; //! Offset to next binary input after pool of already created
	unsigned int currentBinaryOutOffset; //! Offset to next binary output after pool of already created
	bool configValid;

	LOGGING_ADDONS;
};

#endif  //_CONFIGURATOR_H
